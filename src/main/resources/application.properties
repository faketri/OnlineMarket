# ===================================================================
spring.main.banner-mode=off
spring.output.ansi.enabled=ALWAYS
# Output to a file named application.log.
logging.file.name=application.log
# Logging pattern for file
logging.level.root=warn
logging.level.org.springframework.web=debug
logging.level.org.hibernate=error
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %logger{36} - %msg%
# ===================================================================
# = COMMON SPRING BOOT PROPERTIES (^_^)
# ===================================================================
# FREEMARKER
# Set whether all request attributes should be added to the model prior to merging with the template.
#spring.freemarker.expose-request-attributes=true
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# url for the database "postgres"
spring.datasource.url=${DB_CONNECT}
# Username and password
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# =========================================
# = Connection Pool
# =========================================
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
# ==========================================
# = TOMCAT
# ==========================================
server.port=9000
server.tomcat.threads.max=200
server.tomcat.accept-count=100
server.tomcat.connection-timeout=20000
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.generate-dll=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=validate
# Naming strategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Logging sql
log4j.org.springframework.jdbc.core=TRACE
# JWT
jwt.secret.access.key=${JWT_ACCESS_KEY}
jwt.secret.refresh.key=${JWT_REFRESH_KEY}
security.password.salt=${PASSWORD_SALT}
# MIGRATION
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration