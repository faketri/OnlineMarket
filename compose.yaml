version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  spring:
    container_name: glances_back
    environment:
      DB_CONNECT: ${DB_CONNECT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_ACCESS_KEY: ${JWT_ACCESS_KEY}
      JWT_REFRESH_KEY: ${JWT_REFRESH_KEY}
      PASSWORD_SALT: ${PASSWORD_SALT}
    image: spring-boot
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - postgres
    depends_on:
      - postgres

  vue:
    container_name: vue_front
    image: vue-js
    build:
      context: .
      dockerfile: FrontEnd/Docker/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - spring
    depends_on:
      - spring

networks:
  spring:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  spring:
  vue: